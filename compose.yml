services:
  db:
    image: mysql:8
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - private

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - private
    depends_on:
      - db

  backend:
    build: ./backend
    environment:
      DB_HOST: db
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    healthcheck:
      test: [ "CMD", "curl", "-f", "${HOST}:${BACKEND_PORT}/health" ]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    networks:
      - private
      - public
    ports:
      - "${BACKEND_PORT:-3000}:${BACKEND_PORT:-3000}"
    container_name: backend

  frontend:
    build: ./frontend
    environment:
      VITE_API_URL: ${VITE_API_URL}
    networks:
      - public
    ports:
      - "${FRONTEND_PORT:-5173}:5000"
    container_name: frontend
    healthcheck:
      test: [ "CMD", "curl", "-f", "${HOST}:5000" ]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  private:
    driver: bridge
  public:
    driver: bridge
